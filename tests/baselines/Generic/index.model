ClassDeclaration(
  loc: 0-58,
  head: Static(),
  membersMap: Dict<Sym, MemberDeclaration>(
    f: MethodWithBody(
      loc: 0-20,
      isStatic: true,
      returnTy: TypeParameter(
        origin: Id(
          klassId: "",
          name: "f"),
        name: "T"),
      name: "f",
      selfEffect: "pure",
      parameters: [Parameter(
        loc: 11-14,
        ty: TypeParameter(
          origin: Id(
            klassId: "",
            name: "f"),
          name: "T"),
        name: "t",
        index: 0)],
      body: AccessParameter(
        loc: 17-18,
        param: Parameter(
          loc: 11-14,
          ty: TypeParameter(
            origin: Id(
              klassId: "",
              name: "f"),
            name: "T"),
          name: "t",
          index: 0))),
    main: MethodWithBody(
      loc: 20-58,
      isStatic: true,
      returnTy: Id(
        effect: "pure",
        clsId: Id(
          classDeclarationId: "Void",
          typeArgumentIds: [])),
      name: "main",
      selfEffect: "pure",
      parameters: [],
      body: Assert(
        loc: 37-58,
        asserted: InstanceMethodCall(
          loc: 44-58,
          target: StaticMethodCall(
            method: MethodInst(
              decl: Id(
                klassId: "",
                name: "f"),
              typeArguments: [Id(
                effect: "pure",
                clsId: Id(
                  classDeclarationId: "Nat",
                  typeArgumentIds: []))]),
            args: [Literal(
              loc: 51-52,
              value: 0)]),
          method: MethodInst(
            decl: Id(
              klassId: "Nat",
              name: "=="),
            typeArguments: []),
          args: [Literal(
            loc: 56-57,
            value: 0)])))))
