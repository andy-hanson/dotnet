Module(
  loc: 0-153,
  imports: [],
  klass: Klass(
    loc: 0-153,
    head: Static(
      loc: 0-8),
    supers: [],
    methods: [
      Method(
        loc: 8-124,
        isStatic: true,
        returnTy: Access(
          loc: 12-16,
          name: "Void"),
        name: "main",
        parameters: [],
        body: Let(
          loc: 27-40,
          assigned: Single(
            loc: 25-26,
            name: "x"),
          value: OperatorCall(
            loc: 29-40,
            oper: "*",
            right: Literal(
              loc: 37-38,
              value: 3)),
          then: Seq(
            loc: 40-124,
            first: Assert(
              loc: 40-55,
              asserted: OperatorCall(
                loc: 47-55,
                oper: "==",
                right: Literal(
                  loc: 52-53,
                  value: 9))),
            then: Let(
              loc: 57-73,
              assigned: Single(
                loc: 55-56,
                name: "y"),
              value: OperatorCall(
                loc: 59-73,
                oper: "+",
                right: Literal(
                  loc: 70-71,
                  value: 1)),
              then: Seq(
                loc: 73-124,
                first: Assert(
                  loc: 73-89,
                  asserted: OperatorCall(
                    loc: 80-89,
                    oper: "==",
                    right: Literal(
                      loc: 85-87,
                      value: 19))),
                then: Let(
                  loc: 91-108,
                  assigned: Single(
                    loc: 89-90,
                    name: "z"),
                  value: Call(
                    loc: 93-108,
                    target: Access(
                      loc: 93-99,
                      name: "double"),
                    args: [OperatorCall(
                      loc: 101-108,
                      oper: "+",
                      right: Literal(
                        loc: 105-106,
                        value: 1))]),
                  then: Assert(
                    loc: 108-124,
                    asserted: OperatorCall(
                      loc: 115-124,
                      oper: "==",
                      right: Literal(
                        loc: 120-122,
                        value: 20))))))))),
      Method(
        loc: 124-153,
        isStatic: true,
        returnTy: Access(
          loc: 128-131,
          name: "Int"),
        name: "double",
        parameters: [Parameter(
          loc: 139-144,
          ty: Access(
            loc: 139-142,
            name: "Int"),
          name: "x")],
        body: OperatorCall(
          loc: 147-153,
          oper: "*",
          right: Literal(
            loc: 151-152,
            value: 2)))
    ]))
