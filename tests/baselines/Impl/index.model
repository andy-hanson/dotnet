ClassDeclaration(
  loc: 23-155,
  head: Slots(
    slots: [SlotDeclaration(
      loc: 30-39,
      name: "x",
      mutable: false,
      ty: PlainTy(
        effect: "pure",
        instantiatedClass: InstCls(
          classDeclaration: BuiltinClass(
            name: "Nat"),
          typeArguments: [])))]),
  membersMap: Dict<Sym, MemberDeclaration>(
    main: MethodWithBody(
      loc: 67-155,
      isStatic: true,
      returnTy: Id(
        effect: "pure",
        clsId: Id(
          classDeclarationId: "Void",
          typeArgumentIds: [])),
      name: "main",
      selfEffect: "pure",
      parameters: [],
      body: Let(
        loc: 84-102,
        assigned: Single(
          loc: 84-92,
          name: "instance"),
        value: New(
          args: [Literal(
            loc: 99-100,
            value: 1)]),
        then: Let(
          loc: 102-138,
          assigned: Single(
            loc: 102-106,
            name: "gotN"),
          value: StaticMethodCall(
            method: MethodInst(
              decl: Id(
                klassId: "AbstractClass",
                name: "getN"),
              typeArguments: []),
            args: [AccessLocal(
              local: "instance")]),
          then: Assert(
            loc: 138-155,
            asserted: InstanceMethodCall(
              loc: 145-155,
              target: AccessLocal(
                local: "gotN"),
              method: MethodInst(
                decl: Id(
                  klassId: "Nat",
                  name: "=="),
                typeArguments: []),
              args: [Literal(
                loc: 153-154,
                value: 1)]))))),
    x: SlotDeclaration(
      loc: 30-39,
      name: "x",
      mutable: false,
      ty: PlainTy(
        effect: "pure",
        instantiatedClass: InstCls(
          classDeclaration: BuiltinClass(
            name: "Nat"),
          typeArguments: [])))))
