Klass(
  loc: 23-155,
  head: Slots(
    slots: [Slot(
      loc: 23-40,
      name: "x",
      mutable: false,
      ty: BuiltinClass(
        name: "Int"))]),
  membersMap: Dict<Sym, Member>(
    main: MethodWithBody(
      loc: 67-155,
      isStatic: true,
      returnTy: "Void",
      name: "main",
      parameters: [],
      body: Let(
        loc: 93-102,
        assigned: Single(
          loc: 84-92,
          name: "instance"),
        value: New(
          args: [Literal(
            loc: 99-100,
            value: 1)]),
        then: Let(
          loc: 107-138,
          assigned: Single(
            loc: 102-106,
            name: "gotN"),
          value: StaticMethodCall(
            method: Id(
              klassId: "AbstractClass",
              name: "getN"),
            args: [AccessLocal(
              local: "instance")]),
          then: Assert(
            loc: 138-155,
            asserted: InstanceMethodCall(
              target: AccessLocal(
                local: "gotN"),
              method: Id(
                klassId: "Int",
                name: "=="),
              args: [Literal(
                loc: 153-154,
                value: 1)]))))),
    x: Slot(
      loc: 23-40,
      name: "x",
      mutable: false,
      ty: BuiltinClass(
        name: "Int"))))
