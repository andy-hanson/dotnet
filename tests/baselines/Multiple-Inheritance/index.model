ClassDeclaration(
  loc: 24-162,
  head: Slots(
    slots: [SlotDeclaration(
      loc: 31-40,
      name: "x",
      mutable: false,
      ty: PlainTy(
        effect: "pure",
        instantiatedClass: InstCls(
          classDeclaration: BuiltinClass(
            name: "Nat"),
          typeArguments: [])))]),
  membersMap: Dict<Sym, MemberDeclaration>(
    main: MethodWithBody(
      loc: 86-162,
      isStatic: true,
      returnTy: Id(
        effect: "pure",
        clsId: Id(
          classDeclarationId: "Void",
          typeArgumentIds: [])),
      name: "main",
      selfEffect: "pure",
      parameters: [],
      body: Let(
        loc: 103-114,
        assigned: Single(
          loc: 103-104,
          name: "x"),
        value: New(
          args: [Literal(
            loc: 111-112,
            value: 1)]),
        then: Seq(
          loc: 114-162,
          action: Assert(
            loc: 114-138,
            asserted: InstanceMethodCall(
              loc: 121-138,
              target: InstanceMethodCall(
                loc: 121-130,
                target: AccessLocal(
                  local: "x"),
                method: MethodInst(
                  decl: Id(
                    klassId: "Super1",
                    name: "s1Def"),
                  typeArguments: []),
                args: []),
              method: MethodInst(
                decl: Id(
                  klassId: "Nat",
                  name: "=="),
                typeArguments: []),
              args: [Literal(
                loc: 134-136,
                value: 10)])),
          then: Assert(
            loc: 138-162,
            asserted: InstanceMethodCall(
              loc: 145-162,
              target: InstanceMethodCall(
                loc: 145-154,
                target: AccessLocal(
                  local: "x"),
                method: MethodInst(
                  decl: Id(
                    klassId: "Super2",
                    name: "s2Def"),
                  typeArguments: []),
                args: []),
              method: MethodInst(
                decl: Id(
                  klassId: "Nat",
                  name: "=="),
                typeArguments: []),
              args: [Literal(
                loc: 158-160,
                value: 20)]))))),
    x: SlotDeclaration(
      loc: 31-40,
      name: "x",
      mutable: false,
      ty: PlainTy(
        effect: "pure",
        instantiatedClass: InstCls(
          classDeclaration: BuiltinClass(
            name: "Nat"),
          typeArguments: [])))))
