Klass(
  loc: 0-103,
  head: Slots(
    slots: [Slot(
      loc: 0-18,
      name: "x",
      mutable: false,
      ty: BuiltinClass(
        name: "Int"))]),
  membersMap: Dict<Sym, Member>(
    main: MethodWithBody(
      loc: 18-85,
      isStatic: true,
      returnTy: "Void",
      name: "main",
      parameters: [],
      body: Let(
        loc: 39-48,
        assigned: Single(
          loc: 35-38,
          name: "obj"),
        value: New(
          args: [Literal(
            loc: 45-46,
            value: 1)]),
        then: Let(
          loc: 53-67,
          assigned: Single(
            loc: 48-52,
            name: "gotX"),
          value: InstanceMethodCall(
            loc: 55-63,
            target: AccessLocal(
              local: "obj"),
            method: Id(
              klassId: "",
              name: "getX"),
            args: []),
          then: Assert(
            loc: 67-85,
            asserted: InstanceMethodCall(
              loc: 74-85,
              target: AccessLocal(
                local: "gotX"),
              method: Id(
                klassId: "Int",
                name: "=="),
              args: [Literal(
                loc: 82-83,
                value: 1)]))))),
    getX: MethodWithBody(
      loc: 85-103,
      isStatic: false,
      returnTy: "Int",
      name: "getX",
      parameters: [],
      body: GetMySlot(
        slot: Id(
          klass: "",
          name: "x"))),
    x: Slot(
      loc: 0-18,
      name: "x",
      mutable: false,
      ty: BuiltinClass(
        name: "Int"))))
