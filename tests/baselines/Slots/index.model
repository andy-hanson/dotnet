ClassDeclaration(
  loc: 0-172,
  head: Slots(
    slots: [
      SlotDeclaration(
        loc: 7-16,
        name: "x",
        mutable: false,
        ty: PlainTy(
          effect: "pure",
          instantiatedClass: InstCls(
            classDeclaration: BuiltinClass(
              name: "Nat"),
            typeArguments: []))),
      SlotDeclaration(
        loc: 18-27,
        name: "y",
        mutable: true,
        ty: PlainTy(
          effect: "pure",
          instantiatedClass: InstCls(
            classDeclaration: BuiltinClass(
              name: "Nat"),
            typeArguments: [])))
    ]),
  membersMap: Dict<Sym, MemberDeclaration>(
    main: MethodWithBody(
      loc: 29-132,
      isStatic: true,
      returnTy: Id(
        effect: "pure",
        clsId: Id(
          classDeclarationId: "Void",
          typeArgumentIds: [])),
      name: "main",
      selfEffect: "pure",
      parameters: [],
      body: Let(
        loc: 46-62,
        assigned: Single(
          loc: 46-49,
          name: "obj"),
        value: New(
          args: [
            Literal(
              loc: 56-57,
              value: 1),
            Literal(
              loc: 59-60,
              value: 2)
          ]),
        then: Seq(
          loc: 62-132,
          action: Assert(
            loc: 62-81,
            asserted: InstanceMethodCall(
              loc: 69-81,
              target: GetSlot(
                loc: 69-74,
                target: AccessLocal(
                  local: "obj"),
                slot: Id(
                  klass: "",
                  name: "x")),
              method: MethodInst(
                decl: Id(
                  klassId: "Nat",
                  name: "=="),
                typeArguments: []),
              args: [Literal(
                loc: 78-79,
                value: 1)])),
          then: Seq(
            loc: 81-132,
            action: Assert(
              loc: 81-100,
              asserted: InstanceMethodCall(
                loc: 88-100,
                target: GetSlot(
                  loc: 88-93,
                  target: AccessLocal(
                    local: "obj"),
                  slot: Id(
                    klass: "",
                    name: "y")),
                method: MethodInst(
                  decl: Id(
                    klassId: "Nat",
                    name: "=="),
                  typeArguments: []),
                args: [Literal(
                  loc: 97-98,
                  value: 2)])),
            then: Seq(
              loc: 100-132,
              action: InstanceMethodCall(
                loc: 100-111,
                target: AccessLocal(
                  local: "obj"),
                method: MethodInst(
                  decl: Id(
                    klassId: "",
                    name: "incrY"),
                  typeArguments: []),
                args: []),
              then: Assert(
                loc: 113-132,
                asserted: InstanceMethodCall(
                  loc: 120-132,
                  target: GetSlot(
                    loc: 120-125,
                    target: AccessLocal(
                      local: "obj"),
                    slot: Id(
                      klass: "",
                      name: "y")),
                  method: MethodInst(
                    decl: Id(
                      klassId: "Nat",
                      name: "=="),
                    typeArguments: []),
                  args: [Literal(
                    loc: 129-130,
                    value: 3)]))))))),
    incrY: MethodWithBody(
      loc: 132-172,
      isStatic: false,
      returnTy: Id(
        effect: "pure",
        clsId: Id(
          classDeclarationId: "Void",
          typeArgumentIds: [])),
      name: "incrY",
      selfEffect: "set",
      parameters: [],
      body: SetSlot(
        loc: 158-172,
        slot: Id(
          klass: "",
          name: "y"),
        value: InstanceMethodCall(
          loc: 163-171,
          target: GetMySlot(
            slot: Id(
              klass: "",
              name: "y")),
          method: MethodInst(
            decl: Id(
              klassId: "Nat",
              name: "incr"),
            typeArguments: []),
          args: []))),
    x: SlotDeclaration(
      loc: 7-16,
      name: "x",
      mutable: false,
      ty: PlainTy(
        effect: "pure",
        instantiatedClass: InstCls(
          classDeclaration: BuiltinClass(
            name: "Nat"),
          typeArguments: []))),
    y: SlotDeclaration(
      loc: 18-27,
      name: "y",
      mutable: true,
      ty: PlainTy(
        effect: "pure",
        instantiatedClass: InstCls(
          classDeclaration: BuiltinClass(
            name: "Nat"),
          typeArguments: [])))))
