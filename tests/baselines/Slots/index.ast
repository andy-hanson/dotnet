Module(
  loc: 0-103,
  imports: [],
  klass: Klass(
    loc: 0-103,
    head: Slots(
      loc: 0-18,
      slots: [Slot(
        loc: 7-16,
        mutable: false,
        ty: Access(
          loc: 11-14,
          name: "Int"),
        name: "x")]),
    supers: [],
    methods: [
      Method(
        loc: 18-85,
        isStatic: true,
        returnTy: Access(
          loc: 22-26,
          name: "Void"),
        name: "main",
        parameters: [],
        body: Let(
          loc: 39-48,
          assigned: Single(
            loc: 35-38,
            name: "obj"),
          value: New(
            loc: 41-48,
            args: [Literal(
              loc: 45-46,
              value: 1)]),
          then: Let(
            loc: 53-67,
            assigned: Single(
              loc: 48-52,
              name: "gotX"),
            value: Call(
              loc: 55-65,
              target: GetProperty(
                loc: 55-63,
                target: Access(
                  loc: 55-58,
                  name: "obj"),
                propertyName: "getX"),
              args: []),
            then: Assert(
              loc: 67-85,
              asserted: OperatorCall(
                loc: 74-85,
                oper: "==",
                right: Literal(
                  loc: 82-83,
                  value: 1)))))),
      Method(
        loc: 85-103,
        isStatic: false,
        returnTy: Access(
          loc: 89-92,
          name: "Int"),
        name: "getX",
        parameters: [],
        body: Access(
          loc: 101-102,
          name: "x"))
    ]))
