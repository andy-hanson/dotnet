ClassDeclaration(
  loc: 0-75,
  head: Abstract(
    loc: 0-22),
  membersMap: Dict<Sym, MemberDeclaration>(
    main: MethodWithBody(
      loc: 22-75,
      isStatic: true,
      returnTy: Id(
        effect: "pure",
        clsId: Id(
          classDeclarationId: "Void",
          typeArgumentIds: [])),
      name: "main",
      selfEffect: "pure",
      parameters: [Parameter(
        loc: 36-52,
        ty: Id(
          effect: "pure",
          clsId: Id(
            classDeclarationId: "",
            typeArgumentIds: [])),
        name: "a",
        index: 0)],
      body: Assert(
        loc: 55-75,
        asserted: InstanceMethodCall(
          loc: 62-75,
          target: InstanceMethodCall(
            loc: 62-67,
            target: AccessParameter(
              loc: 62-63,
              param: Parameter(
                loc: 36-52,
                ty: Id(
                  effect: "pure",
                  clsId: Id(
                    classDeclarationId: "",
                    typeArgumentIds: [])),
                name: "a",
                index: 0)),
            method: MethodInst(
              decl: Id(
                klassId: "",
                name: "s"),
              typeArguments: []),
            args: []),
          method: MethodInst(
            decl: Id(
              klassId: "String",
              name: "=="),
            typeArguments: []),
          args: [Literal(
            loc: 71-74,
            value: "s")]))),
    s: AbstractMethod(
      loc: 10-20,
      returnTy: Id(
        effect: "pure",
        clsId: Id(
          classDeclarationId: "String",
          typeArgumentIds: [])),
      name: "s",
      parameters: [])))
