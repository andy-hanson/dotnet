Klass(
  loc: 24-162,
  head: Slots(
    slots: [Slot(
      loc: 24-41,
      name: "x",
      mutable: false,
      ty: BuiltinClass(
        name: "Int"))]),
  membersMap: Dict<Sym, Member>(
    main: MethodWithBody(
      loc: 86-162,
      isStatic: true,
      returnTy: "Void",
      name: "main",
      parameters: [],
      body: Let(
        loc: 105-114,
        assigned: Single(
          loc: 103-104,
          name: "x"),
        value: New(
          args: [Literal(
            loc: 111-112,
            value: 1)]),
        then: Seq(
          loc: 114-162,
          action: Assert(
            loc: 114-138,
            asserted: InstanceMethodCall(
              loc: 121-138,
              target: InstanceMethodCall(
                loc: 122-128,
                target: AccessLocal(
                  local: "x"),
                method: Id(
                  klassId: "Super1",
                  name: "s1Def"),
                args: []),
              method: Id(
                klassId: "Int",
                name: "=="),
              args: [Literal(
                loc: 134-136,
                value: 10)])),
          then: Assert(
            loc: 138-162,
            asserted: InstanceMethodCall(
              loc: 145-162,
              target: InstanceMethodCall(
                loc: 146-152,
                target: AccessLocal(
                  local: "x"),
                method: Id(
                  klassId: "Super2",
                  name: "s2Def"),
                args: []),
              method: Id(
                klassId: "Int",
                name: "=="),
              args: [Literal(
                loc: 158-160,
                value: 20)]))))),
    x: Slot(
      loc: 24-41,
      name: "x",
      mutable: false,
      ty: BuiltinClass(
        name: "Int"))))
