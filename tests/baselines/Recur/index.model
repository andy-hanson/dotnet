Klass(
  loc: 0-502,
  head: Static(),
  membersMap: Dict<Sym, Member>(
    main: MethodWithBody(
      loc: 0-120,
      isStatic: true,
      returnTy: Id(
        effect: "pure",
        clsId: "Void"),
      name: "main",
      selfEffect: "pure",
      parameters: [],
      body: Seq(
        loc: 17-120,
        action: Assert(
          loc: 17-45,
          asserted: InstanceMethodCall(
            loc: 24-45,
            target: StaticMethodCall(
              method: Id(
                klassId: "",
                name: "factorial"),
              args: [Literal(
                loc: 34-35,
                value: 5)]),
            method: Id(
              klassId: "Nat",
              name: "=="),
            args: [Literal(
              loc: 39-42,
              value: 120)])),
        then: Seq(
          loc: 45-120,
          action: Assert(
            loc: 45-70,
            asserted: InstanceMethodCall(
              loc: 52-70,
              target: StaticMethodCall(
                method: Id(
                  klassId: "",
                  name: "fibonacci"),
                args: [Literal(
                  loc: 62-63,
                  value: 0)]),
              method: Id(
                klassId: "Nat",
                name: "=="),
              args: [Literal(
                loc: 67-68,
                value: 0)])),
          then: Seq(
            loc: 70-120,
            action: Assert(
              loc: 70-95,
              asserted: InstanceMethodCall(
                loc: 77-95,
                target: StaticMethodCall(
                  method: Id(
                    klassId: "",
                    name: "fibonacci"),
                  args: [Literal(
                    loc: 87-88,
                    value: 2)]),
                method: Id(
                  klassId: "Nat",
                  name: "=="),
                args: [Literal(
                  loc: 92-93,
                  value: 1)])),
            then: Assert(
              loc: 95-120,
              asserted: InstanceMethodCall(
                loc: 102-120,
                target: StaticMethodCall(
                  method: Id(
                    klassId: "",
                    name: "fibonacci"),
                  args: [Literal(
                    loc: 112-113,
                    value: 6)]),
                method: Id(
                  klassId: "Nat",
                  name: "=="),
                args: [Literal(
                  loc: 117-118,
                  value: 8)])))))),
    factorial: MethodWithBody(
      loc: 120-172,
      isStatic: true,
      returnTy: Id(
        effect: "pure",
        clsId: "Nat"),
      name: "factorial",
      selfEffect: "pure",
      parameters: [Parameter(
        loc: 138-143,
        ty: Id(
          effect: "pure",
          clsId: "Nat"),
        name: "n",
        index: 0)],
      body: StaticMethodCall(
        method: Id(
          klassId: "",
          name: "factorial-recursive"),
        args: [
          AccessParameter(
            loc: 166-167,
            param: Parameter(
              loc: 138-143,
              ty: Id(
                effect: "pure",
                clsId: "Nat"),
              name: "n",
              index: 0)),
          Literal(
            loc: 169-170,
            value: 1)
        ])),
    factorial-recursive: MethodWithBody(
      loc: 172-274,
      isStatic: true,
      returnTy: Id(
        effect: "pure",
        clsId: "Nat"),
      name: "factorial-recursive",
      selfEffect: "pure",
      parameters: [
        Parameter(
          loc: 200-205,
          ty: Id(
            effect: "pure",
            clsId: "Nat"),
          name: "n",
          index: 0),
        Parameter(
          loc: 207-214,
          ty: Id(
            effect: "pure",
            clsId: "Nat"),
          name: "acc",
          index: 1)
      ],
      body: WhenTest(
        loc: 217-274,
        cases: [Case(
          loc: 217-240,
          test: InstanceMethodCall(
            loc: 217-234,
            target: AccessParameter(
              loc: 217-225,
              param: Parameter(
                loc: 200-205,
                ty: Id(
                  effect: "pure",
                  clsId: "Nat"),
                name: "n",
                index: 0)),
            method: Id(
              klassId: "Nat",
              name: "=="),
            args: [Literal(
              loc: 229-230,
              value: 0)]),
          result: AccessParameter(
            loc: 234-237,
            param: Parameter(
              loc: 207-214,
              ty: Id(
                effect: "pure",
                clsId: "Nat"),
              name: "acc",
              index: 1)))],
        elseResult: Recur(
          loc: 248-274,
          args: [
            InstanceMethodCall(
              loc: 255-263,
              target: AccessParameter(
                loc: 255-256,
                param: Parameter(
                  loc: 200-205,
                  ty: Id(
                    effect: "pure",
                    clsId: "Nat"),
                  name: "n",
                  index: 0)),
              method: Id(
                klassId: "Nat",
                name: "decr"),
              args: []),
            InstanceMethodCall(
              loc: 265-274,
              target: AccessParameter(
                loc: 265-268,
                param: Parameter(
                  loc: 207-214,
                  ty: Id(
                    effect: "pure",
                    clsId: "Nat"),
                  name: "acc",
                  index: 1)),
              method: Id(
                klassId: "Nat",
                name: "*"),
              args: [AccessParameter(
                loc: 271-272,
                param: Parameter(
                  loc: 200-205,
                  ty: Id(
                    effect: "pure",
                    clsId: "Nat"),
                  name: "n",
                  index: 0))])
          ]))),
    fibonacci: MethodWithBody(
      loc: 274-372,
      isStatic: true,
      returnTy: Id(
        effect: "pure",
        clsId: "Nat"),
      name: "fibonacci",
      selfEffect: "pure",
      parameters: [Parameter(
        loc: 292-297,
        ty: Id(
          effect: "pure",
          clsId: "Nat"),
        name: "n",
        index: 0)],
      body: WhenTest(
        loc: 300-372,
        cases: [
          Case(
            loc: 300-321,
            test: InstanceMethodCall(
              loc: 300-317,
              target: AccessParameter(
                loc: 300-308,
                param: Parameter(
                  loc: 292-297,
                  ty: Id(
                    effect: "pure",
                    clsId: "Nat"),
                  name: "n",
                  index: 0)),
              method: Id(
                klassId: "Nat",
                name: "=="),
              args: [Literal(
                loc: 312-313,
                value: 0)]),
            result: Literal(
              loc: 317-318,
              value: 0)),
          Case(
            loc: 321-335,
            test: InstanceMethodCall(
              loc: 321-331,
              target: AccessParameter(
                loc: 321-322,
                param: Parameter(
                  loc: 292-297,
                  ty: Id(
                    effect: "pure",
                    clsId: "Nat"),
                  name: "n",
                  index: 0)),
              method: Id(
                klassId: "Nat",
                name: "=="),
              args: [Literal(
                loc: 326-327,
                value: 1)]),
            result: Literal(
              loc: 331-332,
              value: 1))
        ],
        elseResult: StaticMethodCall(
          method: Id(
            klassId: "",
            name: "fibonacci-recursive"),
          args: [
            AccessParameter(
              loc: 363-364,
              param: Parameter(
                loc: 292-297,
                ty: Id(
                  effect: "pure",
                  clsId: "Nat"),
                name: "n",
                index: 0)),
            Literal(
              loc: 366-367,
              value: 0),
            Literal(
              loc: 369-370,
              value: 1)
          ]))),
    fibonacci-recursive: MethodWithBody(
      loc: 372-502,
      isStatic: true,
      returnTy: Id(
        effect: "pure",
        clsId: "Nat"),
      name: "fibonacci-recursive",
      selfEffect: "pure",
      parameters: [
        Parameter(
          loc: 400-405,
          ty: Id(
            effect: "pure",
            clsId: "Nat"),
          name: "n",
          index: 0),
        Parameter(
          loc: 407-415,
          ty: Id(
            effect: "pure",
            clsId: "Nat"),
          name: "acc1",
          index: 1),
        Parameter(
          loc: 417-425,
          ty: Id(
            effect: "pure",
            clsId: "Nat"),
          name: "acc2",
          index: 2)
      ],
      body: WhenTest(
        loc: 428-502,
        cases: [Case(
          loc: 428-459,
          test: InstanceMethodCall(
            loc: 428-445,
            target: AccessParameter(
              loc: 428-436,
              param: Parameter(
                loc: 400-405,
                ty: Id(
                  effect: "pure",
                  clsId: "Nat"),
                name: "n",
                index: 0)),
            method: Id(
              klassId: "Nat",
              name: "=="),
            args: [Literal(
              loc: 440-441,
              value: 2)]),
          result: InstanceMethodCall(
            loc: 445-459,
            target: AccessParameter(
              loc: 445-449,
              param: Parameter(
                loc: 407-415,
                ty: Id(
                  effect: "pure",
                  clsId: "Nat"),
                name: "acc1",
                index: 1)),
            method: Id(
              klassId: "Nat",
              name: "+"),
            args: [AccessParameter(
              loc: 452-456,
              param: Parameter(
                loc: 417-425,
                ty: Id(
                  effect: "pure",
                  clsId: "Nat"),
                name: "acc2",
                index: 2))]))],
        elseResult: Recur(
          loc: 467-502,
          args: [
            InstanceMethodCall(
              loc: 474-482,
              target: AccessParameter(
                loc: 474-475,
                param: Parameter(
                  loc: 400-405,
                  ty: Id(
                    effect: "pure",
                    clsId: "Nat"),
                  name: "n",
                  index: 0)),
              method: Id(
                klassId: "Nat",
                name: "decr"),
              args: []),
            AccessParameter(
              loc: 484-488,
              param: Parameter(
                loc: 417-425,
                ty: Id(
                  effect: "pure",
                  clsId: "Nat"),
                name: "acc2",
                index: 2)),
            InstanceMethodCall(
              loc: 490-502,
              target: AccessParameter(
                loc: 490-494,
                param: Parameter(
                  loc: 407-415,
                  ty: Id(
                    effect: "pure",
                    clsId: "Nat"),
                  name: "acc1",
                  index: 1)),
              method: Id(
                klassId: "Nat",
                name: "+"),
              args: [AccessParameter(
                loc: 497-501,
                param: Parameter(
                  loc: 417-425,
                  ty: Id(
                    effect: "pure",
                    clsId: "Nat"),
                  name: "acc2",
                  index: 2))])
          ])))))
