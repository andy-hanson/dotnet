Klass(
  loc: 0-114,
  head: Static(
    loc: 0-8),
  membersMap: Dict<Sym, Member>(
    main: MethodWithBody(
      loc: 8-45,
      isStatic: true,
      returnTy: "Void",
      name: "main",
      parameters: [],
      body: Assert(
        loc: 25-45,
        asserted: InstanceMethodCall(
          loc: 32-45,
          target: StaticMethodCall(
            method: Id(
              klassId: "",
              name: "f"),
            args: [Literal(
              loc: 35-37,
              value: 10)]),
          method: Id(
            klassId: "Nat",
            name: "=="),
          args: [Literal(
            loc: 42-43,
            value: 0)]))),
    f: MethodWithBody(
      loc: 45-114,
      isStatic: true,
      returnTy: "Nat",
      name: "f",
      parameters: [Parameter(
        loc: 55-60,
        ty: "Nat",
        name: "i",
        index: 0)],
      body: WhenTest(
        loc: 63-114,
        cases: [Case(
          loc: 70-84,
          test: InstanceMethodCall(
            loc: 70-80,
            target: AccessParameter(
              loc: 70-71,
              param: Parameter(
                loc: 55-60,
                ty: "Nat",
                name: "i",
                index: 0)),
            method: Id(
              klassId: "Nat",
              name: "=="),
            args: [Literal(
              loc: 75-76,
              value: 0)]),
          result: Literal(
            loc: 80-81,
            value: 0))],
        elseResult: Recur(
          loc: 92-114,
          args: [InstanceMethodCall(
            loc: 98-111,
            target: InstanceMethodCall(
              loc: 99-105,
              target: AccessParameter(
                loc: 99-100,
                param: Parameter(
                  loc: 55-60,
                  ty: "Nat",
                  name: "i",
                  index: 0)),
              method: Id(
                klassId: "Nat",
                name: "-"),
              args: [Literal(
                loc: 103-104,
                value: 1)]),
            method: Id(
              klassId: "Int",
              name: "toNat"),
            args: [])])))))
