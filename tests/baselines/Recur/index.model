Klass(
  loc: 0-118,
  head: Static(
    loc: 0-8),
  membersMap: Dict<Sym, Member>(
    main: MethodWithBody(
      loc: 8-50,
      isStatic: true,
      returnTy: "Void",
      name: "main",
      parameters: [],
      body: Let(
        loc: 27-35,
        assigned: Single(
          loc: 25-26,
          name: "x"),
        value: StaticMethodCall(
          method: Id(
            klassId: "",
            name: "f"),
          args: [Literal(
            loc: 31-33,
            value: 10)]),
        then: Assert(
          loc: 35-50,
          asserted: InstanceMethodCall(
            loc: 42-50,
            target: AccessLocal(
              local: "x"),
            method: Id(
              klassId: "Int",
              name: "=="),
            args: [Literal(
              loc: 47-48,
              value: 0)])))),
    f: MethodWithBody(
      loc: 50-118,
      isStatic: true,
      returnTy: "Int",
      name: "f",
      parameters: [Parameter(
        loc: 60-65,
        ty: "Int",
        name: "i",
        index: 0)],
      body: WhenTest(
        loc: 68-118,
        cases: [Case(
          loc: 75-89,
          test: InstanceMethodCall(
            loc: 75-85,
            target: AccessParameter(
              loc: 75-76,
              param: Parameter(
                loc: 60-65,
                ty: "Int",
                name: "i",
                index: 0)),
            method: Id(
              klassId: "Int",
              name: "=="),
            args: [Literal(
              loc: 80-81,
              value: 0)]),
          result: Literal(
            loc: 85-86,
            value: 0))],
        elseResult: Let(
          loc: 99-110,
          assigned: Single(
            loc: 97-98,
            name: "m"),
          value: InstanceMethodCall(
            loc: 101-110,
            target: AccessParameter(
              loc: 101-102,
              param: Parameter(
                loc: 60-65,
                ty: "Int",
                name: "i",
                index: 0)),
            method: Id(
              klassId: "Int",
              name: "-"),
            args: [Literal(
              loc: 105-106,
              value: 1)]),
          then: Recur(
            loc: 110-118,
            args: [AccessLocal(
              local: "m")]))))))
