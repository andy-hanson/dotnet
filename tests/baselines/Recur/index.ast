Module(
  loc: 0-114,
  imports: [],
  klass: Klass(
    loc: 0-114,
    head: Static(
      loc: 0-8),
    supers: [],
    methods: [
      Method(
        loc: 8-45,
        isStatic: true,
        returnTy: Access(
          loc: 12-16,
          name: "Void"),
        name: "main",
        parameters: [],
        body: Assert(
          loc: 25-45,
          asserted: OperatorCall(
            loc: 32-45,
            oper: "==",
            right: Literal(
              loc: 42-43,
              value: 0)))),
      Method(
        loc: 45-114,
        isStatic: true,
        returnTy: Access(
          loc: 49-52,
          name: "Nat"),
        name: "f",
        parameters: [Parameter(
          loc: 55-60,
          ty: Access(
            loc: 55-58,
            name: "Nat"),
          name: "i")],
        body: WhenTest(
          loc: 63-114,
          cases: [Case(
            loc: 70-84,
            test: OperatorCall(
              loc: 70-80,
              oper: "==",
              right: Literal(
                loc: 75-76,
                value: 0)),
            result: Literal(
              loc: 80-81,
              value: 0))],
          elseResult: Recur(
            loc: 92-114,
            args: [Call(
              loc: 98-113,
              target: GetProperty(
                loc: 98-111,
                target: OperatorCall(
                  loc: 99-105,
                  oper: "-",
                  right: Literal(
                    loc: 103-104,
                    value: 1)),
                propertyName: "toNat"),
              args: [])])))
    ]))
