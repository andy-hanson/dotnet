Klass(
  loc: 0-143,
  head: Static(
    loc: 0-8),
  membersMap: Dict<Sym, Member>(
    main: MethodWithBody(
      loc: 8-143,
      isStatic: true,
      returnTy: "Void",
      name: "main",
      parameters: [],
      body: Let(
        loc: 27-111,
        assigned: Single(
          loc: 25-26,
          name: "x"),
        value: Try(
          loc: 29-111,
          _do: Seq(
            loc: 41-73,
            action: Assert(
              loc: 41-57,
              asserted: Literal(
                loc: 48-53,
                value: false)),
            then: Literal(
              loc: 57-70,
              value: "unreachable")),
          _catch: Catch(
            loc: 73-111,
            exceptionTy: "Exception",
            caught: Single(
              loc: 89-90,
              name: "e"),
            then: InstanceMethodCall(
              loc: 94-107,
              target: AccessLocal(
                local: "e"),
              method: Id(
                klassId: "Exception",
                name: "description"),
              args: [])),
          _finally: null),
        then: Assert(
          loc: 111-143,
          asserted: InstanceMethodCall(
            loc: 118-143,
            target: AccessLocal(
              local: "x"),
            method: Id(
              klassId: "String",
              name: "=="),
            args: [Literal(
              loc: 123-142,
              value: "Assertion failed.")]))))))
