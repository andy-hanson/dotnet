Klass(
  loc: 0-135,
  head: Static(),
  membersMap: Dict<Sym, Member>(
    main: MethodWithBody(
      loc: 0-135,
      isStatic: true,
      returnTy: "Void",
      name: "main",
      parameters: [],
      body: Let(
        loc: 19-103,
        assigned: Single(
          loc: 17-18,
          name: "x"),
        value: Try(
          loc: 21-103,
          _do: Seq(
            loc: 33-65,
            action: Assert(
              loc: 33-49,
              asserted: Literal(
                loc: 40-45,
                value: false)),
            then: Literal(
              loc: 49-62,
              value: "unreachable")),
          _catch: Catch(
            loc: 65-103,
            exceptionTy: "Exception",
            caught: Single(
              loc: 81-82,
              name: "e"),
            then: InstanceMethodCall(
              loc: 86-99,
              target: AccessLocal(
                local: "e"),
              method: Id(
                klassId: "Exception",
                name: "description"),
              args: [])),
          _finally: null),
        then: Assert(
          loc: 103-135,
          asserted: InstanceMethodCall(
            loc: 110-135,
            target: AccessLocal(
              local: "x"),
            method: Id(
              klassId: "String",
              name: "=="),
            args: [Literal(
              loc: 115-134,
              value: "Assertion failed.")]))))))
