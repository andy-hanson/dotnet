Module(
  loc: 0-143,
  imports: [],
  klass: Klass(
    loc: 0-143,
    head: Static(
      loc: 0-8),
    supers: [],
    methods: [Method(
      loc: 8-143,
      isStatic: true,
      returnTy: Access(
        loc: 12-16,
        name: "Void"),
      name: "main",
      parameters: [],
      body: Let(
        loc: 27-111,
        assigned: Single(
          loc: 25-26,
          name: "x"),
        value: Try(
          loc: 29-111,
          _do: Seq(
            loc: 41-73,
            first: Assert(
              loc: 41-57,
              asserted: Literal(
                loc: 48-53,
                value: false)),
            then: Literal(
              loc: 57-70,
              value: "unreachable")),
          _catch: Catch(
            loc: 73-111,
            exceptionTy: Access(
              loc: 79-88,
              name: "Exception"),
            exceptionName: "e",
            then: Call(
              loc: 94-109,
              target: GetProperty(
                loc: 94-107,
                target: Access(
                  loc: 94-95,
                  name: "e"),
                propertyName: "description"),
              args: [])),
          _finally: null),
        then: Assert(
          loc: 111-143,
          asserted: OperatorCall(
            loc: 118-143,
            oper: "==",
            right: Literal(
              loc: 123-142,
              value: "Assertion failed.")))))]))
